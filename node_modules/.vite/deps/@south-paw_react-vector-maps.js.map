{
  "version": 3,
  "sources": ["../../@south-paw/react-vector-maps/src/index.ts", "../../@south-paw/react-vector-maps/lib/react-shim.js", "../../@south-paw/react-vector-maps/src/VectorMap.tsx"],
  "sourcesContent": ["export * from './VectorMap';\n", "import * as React from 'react';\n\nexport { React };\n", "import React from 'react';\n\nexport interface VectorMapLayer {\n  /** Unique ID of each layer. */\n  id: string;\n  /** Name of the layer. */\n  name: string;\n  /** SVG path for the layer. */\n  d: string;\n}\n\nexport interface VectorMapProps extends React.SVGProps<SVGSVGElement> {\n  children?: React.ReactNode;\n  /** Unique ID of the SVG element. */\n  id: string;\n  /** Name of the map. */\n  name: string;\n  /** View box for the map. */\n  viewBox: string;\n  /** Layers that represent the regions of the map. */\n  layers: VectorMapLayer[];\n  /** Tab index for each layer. Set to '-1' to disable layer focusing. */\n  tabIndex?: number;\n  /** Props to spread onto each layer. */\n  layerProps?: React.SVGProps<SVGPathElement>;\n  /** Layer IDs to 'select' with the 'aria-checked' attribute. */\n  checkedLayers?: string[];\n  /** Layer IDs to 'select' with the 'aria-current' attribute. */\n  currentLayers?: string[];\n}\n\nexport function VectorMap({\n  id,\n  name,\n  layers,\n  tabIndex = 0,\n  layerProps,\n  checkedLayers,\n  currentLayers,\n  children,\n  ...other\n}: VectorMapProps) {\n  if (!layers || layers.length === 0) {\n    // eslint-disable-next-line no-console\n    console.error(\n      `[@south-paw/react-vector-maps] No 'layers' prop provided. Did you spread a map object onto the component?`,\n    );\n    return null;\n  }\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" key={id} aria-label={name} {...other}>\n      {children}\n      {layers.map((layer) => (\n        <path\n          key={layer.id}\n          tabIndex={tabIndex}\n          aria-label={layer.name}\n          aria-checked={checkedLayers && checkedLayers.includes(layer.id)}\n          aria-current={currentLayers && currentLayers.includes(layer.id)}\n          {...layer}\n          {...layerProps}\n        />\n      ))}\n    </svg>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,QAAA,cAAA,CAAA;AAAA,aAAA,aAAA;MAAA,WAAA,MAAA;IAAA,CAAA;AAAA,WAAA,UAAA,aAAA,WAAA;ACAA,QAAA,QAAuB,QAAA,eAAA;ACmDnB,QAAA,qBAAA;AApBG,aAAS,UAAU;MACxB;MACA;MACA;MACA,WAAW;MACX;MACA;MACA;MACA;MAAA,GACG;IACL,GAAmB;AACjB,UAAI,CAAC,UAAU,OAAO,WAAW,GAAG;AAElC,gBAAQ;UACN;QACF;AACA,eAAO;MACT;AAEA,cACE,GAAA,mBAAA,MAAC,OAAA;QAAI,OAAM;QAAsC,cAAY;QAAO,GAAG;QACpE,UAAA;UAAA;UACA,OAAO,IAAI,CAAC,WACX,GAAA,mBAAA,KAAC,QAAA;YAEC;YACA,cAAY,MAAM;YAClB,gBAAc,iBAAiB,cAAc,SAAS,MAAM,EAAE;YAC9D,gBAAc,iBAAiB,cAAc,SAAS,MAAM,EAAE;YAC7D,GAAG;YACH,GAAG;UAAA,GANC,MAAM,EAOb,CACD;QAAA;MAAA,GAZ0C,EAa7C;IAEJ;;;",
  "names": []
}
